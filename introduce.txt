2018.07 - 2019.03 负责用户体系。

业务围绕用户生产的内容，比如用户导航的轨迹、在某个地点定位的数据、以及使用地图的激励等。
在投入的激励有限的情况下，在UI方面下了很多功夫，主要目的是为了增强互动的趣味性，吸引用户。
在此期间上线了足迹视频。

前期产品调研同类产品是怎么做的，比如keep，国外某个不知名sdk，都是在服务端生成视频。
服务端生成视频的好处是可以以链接的形式分享，不受时长的限制；坏处是工作量太大，而且没这个基础。
经过讨论，最终确定还是端上生成视频，关键因素是分享时，直接分享视频和分享一个视频链接，点击率是不一样的。

技术调研：底图是一张surface，通过读取底图内容生成视频成本太高，使用录屏。
录屏技术调研：写demo，size的问题。

后期打磨：逐帧回放；里程标的问题


为了提升响应速度，提高用户体验，进行响应时间的优化。

1.抓堆栈，看时间，优化布局。
2.优化流程，减少重复刷新。
3.扣细节，比如一个isLogin可以在方法之间当作参数来传递。

思考：通过普通手段优化，是有一个瓶颈的：比如进页面时不初始化某些东西，等用户点击的时候再初始化，也要等比较久。一味的放在子线程执行，拖累CPU处理任务的速度。
做到后面可能变成了时间分配上的问题，主要还是要减少绝对的工作量。




2019.03 - 至今 首页改版

为什么要首页改版：
现有的首页以底图为主，能展示的内容很少，如果以一个纯粹的出行工具来说，是可以的，甚至首页应该越精简越好。
但是从集团战略的角度来说，地图需要向智能化出行助手的方向发展，需要承载更多的推荐内容，现有的首页是没有这个能力的，所以启动了首页改版。

介绍新首页：以可以拖动的面板来承载内容。具体是面板展示的页面是不固定的，但是同一时间只能展示一个页面，同时提供一个容器来容纳不同的界面，并提一种快速在不同页面之间切换的交互方式。
面板有三种状态，收起、小面板、展开态，可以滑动面板在三种状态之间切换。
在面板滑动的过程中，面板当前展示的页面元素需要有渐变的动效。

监听面板触摸事件，提供一种观察者模式的接口，使面板内部的页面能接收到滑动的消息。使用起来存在很多问题，演变成装载页面的基类容器，容器中将内容划分为不同的模块，然后分别记录每个模块的偏移量，使用偏移和缩放来代替布局的变化。

遇到的问题：物料系统。为了解决开机短链接请求过多诞生出来的系统，通过短链接一次请求所有的配置文件与推荐物料，端上的持久化和容错、重试逻辑下沉到C++层进行统一。
主要问题：服务端不知道端上的状态，所以无法完全控制客户端，导致客户端逻辑变多；强刷接口导致物料系统定位不准确。
深层次的问题：对架构的不重视、历史遗留问题。从某个需求开始，客户端逻辑一点点，一点点的积累；需求刚开始的时候，可能意识到了，但是为了上线新功能，还是这样干了。